#ifndef _RECommon_h_
#define _RECommon_h_

/**
 * Common file included by the rulebuilder to create the rules engine
 * IMPORTANT NOTE!!!!
 * This file should have no dependencies on Flextrade headers. Any attempt to include a Flextrade header
 * will cause the rules building process to break
 *
 */

//System includes
#ifdef PLATFORM_WIN
	#include <windows.h>
#else
	#include <unistd.h>
#endif

//C includes
#include <signal.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>
#include <time.h>

//C++ includes
#include <iostream>
#include <string>
#include <map>
#include <vector>
#include <set>

using namespace std;

///Argument to be passed to the host to get the RECommon.h include data
extern const char *const 	RE_CMN_INCLUDE_ARGUMENT;
///Argument to be passed to the host to get the REHostExport.h include data
extern const char *const 	RE_HOST_INCLUDE_ARGUMENT;
///Name of the common include file
extern const char *const 	RE_CMN_INCLUDE_FILE;
///Name of the host include file
extern const char *const 	RE_HOST_INCLUDE_FILE;
///Name of the include file that has the function signatures of all the rules
extern const char *const 	RE_ALL_RULES_INCLUDE_FILE;
///Name of the rules engine file generated by the rulebuilder
extern const char *const 	RE_SO_FILE;
///Function entry point within the rules engine
extern const char *const	RE_SO_ENTRY_POINT;
///Rule file extension
extern const char *const 	RE_RULE_FILE_EXTN;
///Header file extension
extern const char *const 	RE_HEADER_FILE_EXTN;
///Data passed to the entry point
typedef void * HEVENTDATA;
///Entry point function
extern "C" int OnEvent(int, HEVENTDATA);
///Function pointer corresponding to the entry point
typedef int (*EVENTHANDLER)(int, HEVENTDATA);
///Function which returns the common include string
const char * GetCmnIncludeString();
///Function which returns the host include string
const char * GetHostIncludeString();

#endif

