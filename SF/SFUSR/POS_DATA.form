_STRT_NEW_FORM_ 1 POS_DATA 0^0:prec2:gblank:No:::rank_n:const_n:exp_n::1:-1::false::false:unlocked:POS_DATA
/******************************************************************
POS_DATA

Description	:
Rule populating the commonly required columns.

Events handled :
FT_ROW_LOADED
FT_SYM_DATA
FT_MKT_DATA
FT_TRD_DATA

******************************************************************/

const char szRule[DEF_STR_LEN] = "POS_DATA";

//static char szLogMsg[DEF_MESSAGE_LENGTH] = "";

int nVal = 0;
double dVal = 0;

if (REASON == FT_SYM_DATA || REASON == FT_ROW_LOADED)
{
	//Set Lot Size
	nVal = 1;
	if(Sym_Get_Int(FLID_LOT_SIZE, nVal) &&(nVal > 0 ))
	{
		Set_Column_Value(CLMNAME_LOT_SIZE, nVal);
		Set_Column_Value(CLMNAME_ROUND_LOT, (double)1.0/nVal);
	}
	//Set Tick Size
	dVal = 0.01;
	if(Sym_Get_Double(FLID_TICK_SIZE, dVal) && (dVal > 0 ))
	{
		Set_Column_Value(CLMNAME_TICK_SIZE, dVal);
		Set_Column_Value(CLMNAME_ROUND_PRICE, (double)1/dVal);
	}
}
/*
Pop_Msg("~~POS_DATA~~");
FTStr reasonMsg = "REASON: ";
reasonMsg += REASON;
Pop_Msg(reasonMsg);
*/
if (REASON == FT_MKT_DATA || REASON == FT_TRD_DATA || REASON == FT_SYM_DATA)
{
//	Pop_Msg("Inside REASON");
	// Set Margin Rates
	if(Sym_Get_Double(FLID_LONG_MARGIN_RATE, dVal))
	{
		Set_Column_Value(CLMNAME_L_MARGIN_R, dVal);
	}
	else
	{
		Set_Column_Value(CLMNAME_L_MARGIN_R, -1.0);
	}	
	if(Sym_Get_Double(FLID_SHORT_MARGIN_RATE, dVal))
	{
		Set_Column_Value(CLMNAME_S_MARGIN_R, dVal);
	}
	else
	{
		Set_Column_Value(CLMNAME_S_MARGIN_R, -1.0);
	}
	
	// Set Error Code
	if(Sym_Get_Int(FLID_ERRCODE_FEED, nVal))
	{	
		Set_Column_Value(CLMNAME_ERRCODE_FEED, nVal);
	}
	else
	{
		Set_Column_Value(CLMNAME_ERRCODE_FEED, -1);
	}
	
	// Set Multiplier
	if(Sym_Get_Int(FLID_MULTIPLIER_FEED, nVal))
	{
		Set_Column_Value(CLMNAME_MULTIPLIER_FEED, nVal);
	}
	else
	{
		Set_Column_Value(CLMNAME_MULTIPLIER_FEED, -1);
	}
	
	// Set Position columns
	if(Sym_Get_Int(FLID_POS_YD_LONG, nVal))
	{
		Set_Column_Value(CLMNAME_POS_YD_LONG, nVal);
	}
	else
	{
		Set_Column_Value(CLMNAME_POS_YD_LONG, -1);
	}
	
	if(Sym_Get_Int(FLID_POS_TD_LONG, nVal))
	{
		Set_Column_Value(CLMNAME_POS_TD_LONG, nVal);
		FTStr msg = "TD_LONG: ";
		msg += nVal;
		Pop_Msg1(msg);
	}
	else
	{
		Set_Column_Value(CLMNAME_POS_TD_LONG, -1);
	}
		
	if(Sym_Get_Int(FLID_POS_YD_SHORT, nVal))
	{
		Set_Column_Value(CLMNAME_POS_YD_SHORT, nVal);
	}
	else
	{
		Set_Column_Value(CLMNAME_POS_YD_SHORT, -1);
	}
	
	if(Sym_Get_Int(FLID_POS_TD_SHORT, nVal))
	{
		Set_Column_Value(CLMNAME_POS_TD_SHORT, nVal);
	}
	else
	{
		Set_Column_Value(CLMNAME_POS_TD_SHORT, -1);
	}
		
	if(Sym_Get_Int(FLID_POS_ABS, nVal))
	{
		Set_Column_Value(CLMNAME_POS_ABS, nVal);
	}
	else
	{
		Set_Column_Value(CLMNAME_POS_ABS, -1);
	}
	
	// Set Avail Position columns
	if(Sym_Get_Int(FLID_AVAIL_YD_LONG, nVal))
	{
		Set_Column_Value(CLMNAME_AVAIL_YD_LONG, nVal);
	}
	else
	{
		Set_Column_Value(CLMNAME_AVAIL_YD_LONG, -1);
	}
		
	if(Sym_Get_Int(FLID_AVAIL_TD_LONG, nVal))
	{
		Set_Column_Value(CLMNAME_AVAIL_TD_LONG, nVal);
	}
	else
	{
		Set_Column_Value(CLMNAME_AVAIL_TD_LONG, -1);
	}
	
	if(Sym_Get_Int(FLID_AVAIL_YD_SHORT, nVal))
	{
		Set_Column_Value(CLMNAME_AVAIL_YD_SHORT, nVal);
	}
	else
	{
		Set_Column_Value(CLMNAME_AVAIL_YD_SHORT, -1);
	}
		
	if(Sym_Get_Int(FLID_AVAIL_TD_SHORT, nVal))
	{
		Set_Column_Value(CLMNAME_AVAIL_TD_SHORT, nVal);
	}
	else
	{
		Set_Column_Value(CLMNAME_AVAIL_TD_SHORT, -1);
	}
	
	// Set Position Limit
	if(Sym_Get_Int(FLID_POS_LIMIT, nVal))
	{
		Set_Column_Value(CLMNAME_POS_LIMIT, nVal);
	}
	else
	{
		Set_Column_Value(CLMNAME_POS_LIMIT, -1);
	}
}

// Set the Investor Avail Funds in the rows against each symbol
FTStr sMsg;
FTStr sInvestor;
sInvestor = GlobalStr("INVESTOR");
dVal = 0;
dVal = GetInvestorAvailFund(sInvestor.str());
sMsg = "Investor = "; sMsg += sInvestor;
sMsg += ", Avail Funds = "; sMsg += dVal;
//Pop_Msg(sMsg);
double dOldAvailFunds = Value_Cell_Else(CLMNAME_AVAIL, 0);
sMsg = dOldAvailFunds;
//Pop_Msg(sMsg);
if (fabs(dOldAvailFunds-dVal)>0.0001)
{
	if(dVal > 0)
	{
		//DBG_LOG(szRule, SB(szLogMsg, "Investor Avail Funds tick (OldVal=%.02f, New Val=%.02f, Reason=%d).", dOldAvailFunds, dVal, REASON));
		//Pop_Msg(szLogMsg);
		Set_Column_Value(CLMNAME_AVAIL, dVal);
	}
}

return 1;


_END_FORM_ *****************************************
